package visão;

import controle.*;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.text.DecimalFormat;

public class Mesário extends javax.swing.JFrame {

    private ControleCandidato cc;
    private ControleEleitor ce;
    private ControleUrnaEletronica cUrna;
    private Urna urna;

    /**
     * Creates new form Mesário
     */
    public Mesário() throws IOException {
        initComponents();
        setSize(585, 377);
        setTitle("Mesário");
        setResizable(false); // Tamanho fixo
        setLocationRelativeTo(null);//Aparecer no centro da tela
        cc = new ControleCandidato();
        ce = new ControleEleitor();
        cUrna = new ControleUrnaEletronica();
        ce.LerEleitores();
        cc.LerCandidatos();
        Zona.setText("Zona Eleitoral: " + Integer.toString(cUrna.RetornaZona()));
    }

    public void EscreveResultado() throws IOException {
        DecimalFormat dc = new DecimalFormat("0.00"); // Escreve com apenas duas casas decimais
        FileWriter fw = new FileWriter("Resultado.txt", false); // Sempre cria um novo arquivo
        BufferedWriter bw = new BufferedWriter(fw);
        ArrayList<Candidato> c;
        int totalValidoP = 0;
        int totalValidoV = 0;
        c = cc.listaCandidatos();

        for (Candidato candidato : c) {
            if (candidato.getCargo().compareTo(Cargo.PREFEITO) == 0) {
                totalValidoP += candidato.getNumeroVotos();
            } else {
                totalValidoV += candidato.getNumeroVotos();
            }
        }
        bw.write(":::::::::::::::::::::::::::PREFEITOS:::::::::::::::::::::::::::::\r\n\r\n");
        bw.write("NOME                   Número    Nº Votos  Percentual de Votos\r\n\r\n");
        for (Candidato candidato : c) {
            if (candidato.getCargo().compareTo(Cargo.PREFEITO) == 0) {
                bw.write(candidato.getNome());
                for (int i = 0; i < 23 - candidato.getNome().length(); i++) {
                    bw.write(" ");
                }
                bw.write(Integer.toString(candidato.getNumero()));
                for (int i = 0; i < 8; i++) {
                    bw.write(" ");
                }
                bw.write(Integer.toString(candidato.getNumeroVotos()));
                for (int i = 0; i < 10 - (Integer.toString(candidato.getNumeroVotos())).length(); i++) {
                    bw.write(" ");
                }
                bw.write(" " + dc.format(((float) candidato.getNumeroVotos() / totalValidoP) * 100) + " %\r\n");

            }
        }
        bw.write("\r\nVotos Brancos: " + cUrna.RetornaBrancosP() + "\tVotos Nulos: " + cUrna.RetornaNulosP() + "\r\n");
        bw.write("\r\n::::::::::::::::::::::::::VEREADORES:::::::::::::::::::::::::\r\n\r\n");
        bw.write("NOME                   Número    Nº Votos  Percentual de Votos\r\n\r\n");
        for (Candidato candidato : c) {
            if (candidato.getCargo().compareTo(Cargo.VEREADOR) == 0) {
                bw.write(candidato.getNome());
                for (int i = 0; i < 23 - candidato.getNome().length(); i++) {
                    bw.write(" ");
                }
                bw.write(Integer.toString(candidato.getNumero()));
                for (int i = 0; i < 5; i++) {
                    bw.write(" ");
                }
                bw.write(Integer.toString(candidato.getNumeroVotos()));
                for (int i = 0; i < 10 - (Integer.toString(candidato.getNumeroVotos())).length(); i++) {
                    bw.write(" ");
                }
                bw.write(" " + dc.format(((float) candidato.getNumeroVotos() / totalValidoV) * 100) + " %\r\n");
            }
        }
        bw.write("\r\nVotos Brancos: " + cUrna.RetornaBrancosV() + "\tVotos Nulos: " + cUrna.RetornaNulosV() + "\r\n");
        bw.write("\r\n::::::::::::::::::::::::RESUMO:::::::::::::::::::::::::::::::\r\n\r\n");
        bw.write("Total Votos Brancos: " + (cUrna.RetornaBrancosP() + cUrna.RetornaBrancosV()) + "\r\nTotal Votos Nulos: " + (cUrna.RetornaNulosP() + cUrna.RetornaNulosV())+"\r\n");
        bw.write("Total de Eleitores: "+(totalValidoP+cUrna.RetornaNulosP()+cUrna.RetornaBrancosP()));
        bw.close();
        fw.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Autorizar = new javax.swing.JButton();
        Encerra = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        CampoTitulo = new javax.swing.JTextField();
        Info = new javax.swing.JLabel();
        Zona = new javax.swing.JLabel();
        PlanoFundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Autorizar.setText("Autorizar Eleitor");
        Autorizar.setFocusable(false);
        Autorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorizarActionPerformed(evt);
            }
        });
        getContentPane().add(Autorizar);
        Autorizar.setBounds(150, 230, 120, 40);

        Encerra.setText("Encerrar Votação");
        Encerra.setFocusable(false);
        Encerra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncerraActionPerformed(evt);
            }
        });
        getContentPane().add(Encerra);
        Encerra.setBounds(330, 230, 130, 40);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Título de Eleitor:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 80, 190, 30);

        CampoTitulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                CampoTituloMouseDragged(evt);
            }
        });
        CampoTitulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CampoTituloMouseClicked(evt);
            }
        });
        getContentPane().add(CampoTitulo);
        CampoTitulo.setBounds(220, 80, 320, 30);

        Info.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        Info.setForeground(new java.awt.Color(255, 255, 255));
        Info.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(Info);
        Info.setBounds(80, 150, 400, 40);

        Zona.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Zona.setForeground(new java.awt.Color(255, 255, 255));
        Zona.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(Zona);
        Zona.setBounds(390, 310, 170, 30);

        PlanoFundo.setForeground(new java.awt.Color(255, 255, 255));
        PlanoFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Plano de Fundo.jpg"))); // NOI18N
        getContentPane().add(PlanoFundo);
        PlanoFundo.setBounds(0, 0, 580, 350);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AutorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorizarActionPerformed
        String titulo = CampoTitulo.getText();
        if (ce.buscaEleitor(titulo) != null && cUrna.buscaEleitorVotou(titulo) == null) {
            Eleitor e = ce.buscaEleitor(titulo);
            cUrna.salvaEleitorVotou(e);
            urna = new Urna();
            urna.setVisible(true);
            CampoTitulo.setText("");
            Info.setText("");
        } else if (cUrna.buscaEleitorVotou(titulo) != null) {
            Info.setText("Eleitor ja votou!");
        } else {
            Info.setText("Eleitor não cadastrado nessa zona!");
        }
    }//GEN-LAST:event_AutorizarActionPerformed

    private void EncerraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncerraActionPerformed
        ArrayList<Candidato> cs;
        cs = cc.listaCandidatos();
        cc.Ordena(cs);
        try {
            EscreveResultado();
        } catch (IOException ex) {
            Logger.getLogger(Mesário.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);// Finaliza o programa
    }//GEN-LAST:event_EncerraActionPerformed

    private void CampoTituloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CampoTituloMouseClicked
        Info.setText(""); // Limpa Tela
    }//GEN-LAST:event_CampoTituloMouseClicked

    private void CampoTituloMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CampoTituloMouseDragged
        Info.setText("");   // LimpaTela
    }//GEN-LAST:event_CampoTituloMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mesário.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mesário.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mesário.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mesário.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Mesário().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Mesário.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Autorizar;
    private javax.swing.JTextField CampoTitulo;
    private javax.swing.JButton Encerra;
    private javax.swing.JLabel Info;
    private javax.swing.JLabel PlanoFundo;
    private javax.swing.JLabel Zona;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
